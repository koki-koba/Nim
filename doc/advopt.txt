Advanced commands:
  //compileToC, cc          プロジェクトをCコードジェネレーターでコンパイルする
  //compileToCpp, cpp       プロジェクトをC++のコードにコンパイルする
  //compileToOC, objc       プロジェクトをObjective Cのコードにコンパイルする
  //js                      プロジェクトをJavascriptにコンパイルする
  //e                       Nimscriptを実行する
  //rst2html                reStructuredTextファイルをHTMLに変換する
  //rst2tex                 reStructuredTextファイルをTeXに変換する
  //jsondoc                 ドキュメントファイルをjsonに展開する
  //ctags                   タグファイルを作成する
  //buildIndex              ドキュメント全体のインデックスを作成する
  //run                     プロジェクトを実行する (Tiny C backend; バグ!)
  //genDepend               モジュール依存グラフを含むDOTファイルを生成する
  //dump                    すべての定義済み条件文と検索パスをダンプする
  //check                   プロジェクトの構文をチェックする

Advanced options:
  -o:FILE, --out:FILE       出力するファイル名
  --stdout                  標準出力に出力する
  --colors:on|off           コンパイラメッセージの色付け
  --listFullPaths           メッセージのフルパスを一覧表示する
  -w:on|off|list, --warnings:on|off|list 
                            警告の表示 on|off または利用可能な警告のリストを表示する
  --warning[X]:on|off       警告 X の表示を on|off する
  --hints:on|off|list       ヒントの表示 on|off または利用なヒントのリストを表示する
  --hint[X]:on|off          ヒント X の表示をon|off する
  --lib:PATH                ライブラリのパスをセットする
  --import:PATH             自動的にインポートされたモジュールを追加する
  --include:PATH            自動的に含まれるモジュールを追加する
  --nimcache:PATH           生成されたファイルに使用されるパスを設定する
  --header:FILE             コンパイラが .h ファイルを生成するか (ファイルはオプションです)
  -c, --compileOnly         コンパイルのみ、アセンブルとリンクは行わない
  --noLinking               コンパイルとファイル生成のみ、リンクは行わない
  --noMain                  メインプロシージャを生成しない
  --genScript               'nimcache'サブディレクトリに'compile_$$project$$scriptext' 
                            というコンパイルスクリプトを生成する --compileOnly が有効になります
  --genDeps                 依存関係を含む '.deps'ファイルを生成する
  --os:SYMBOL               ターゲットのオペレーティングシステムをセットする (クロスコンパイル)
  --cpu:SYMBOL              ターゲットのプロセッサをセットする (クロスコンパイル))
  --debuginfo               デバッグ情報の出力を有効にする
  -t, --passC:OPTION        Cコンパイラに渡されるオプション
  -l, --passL:OPTION        リンカにに渡されるオプション
  --cincludes:DIR           Cコンパイラのヘッダ検索パスを変更する
  --clibdir:DIR             リンカのライブラリ検索パスを変更する
  --clib:LIBNAME            追加のCライブラリをリンクする
                            (プラットフォーム固有の拡張子を省略する必要がある)
  --genMapping              (破壊されたNim) 識別子のペアを含むマッピングファイルを生成する
  --project                 プロジェクト全体を文書化する (doc2)
  --docSeeSrcUrl:url        doc と doc2 で 'see source' コマンドを有効化する
                            (config/nimdoc.cfg の doc.item.seesrc を参照してください)
  --lineDir:on|off          #line ディレクティブの on|off
  --embedsrc                生成された出力に元のソースコードをコメントとして埋め込む
  --threadanalysis:on|off   スレッド分析の on|off
  --tlsEmulation:on|off     ローカルストレージのエミュレーション on|off
  --taintMode:on|off        汚れモード on|off
  --implicitStatic:on|off   暗黙的なコンパイル時間の評価 on|off
  --patterns:on|off         パターンマッチング on|off
  --memTracker:on|off       メモリートラッカー on|off
  --hotCodeReloading:on|off
                            ホットコードリロードのサポート on|off
  --excessiveStackTrace:on|off
                            ファイルのフルパスの追跡
  --oldNewlines:on|off      "\n"の古い動作の on|off
  --laxStrings:on|off       オンにすると、文字列でゼロターミネータにアクセスできます。
                            下位互換性のためにのみ利用される
  --skipCfg                 一般的な設定ファイルを読み込まない
  --skipUserCfg             ユーザーの設定ファイルを読み込まない
  --skipParentCfg           親ディレクトリの設定ファイルを読み込まない
  --skipProjCfg             プロジェクトの設定ファイルを読み込まない
  --gc:refc|v2|markAndSweep|boehm|go|none|regions
                            利用するGCの選択; デフォルトは 'refc'
  --index:on|off            インデックスファイルの生成 on|off
  --putenv:key=value        環境変数のセット
  --NimblePath:PATH         Nimbleサポートのパスを追加
  --noNimblePath            Nimbleのパスを無効にする
  --noCppExceptions         C++バックエンドでデフォルト例外処理を使用する
  --cppCompileToNamespace   生成されたC++コードで "Nim" namespace を使用する
  --excludePath:PATH        指定されたパスを検索から除外する
  --dynlibOverride:SYMBOL   Dynlib：SYMBOLは効果がなく、代わりに静的にリンクすることができるように
                            SYMBOLをマークします。シンボルマッチングは曖昧:
                            --dynlibOverride：luaはdynlib: "liblua.so.3"にマッチします
  --dynlibOverrideAll       dynlib pragma を無効化する
  --listCmd                 外部プログラムの実行に使用されるコマンドのリスト
  --parallelBuild:0|1|...   パラレルビルドのためのプラットフォーム
                            value = プロセッサの番号 (0: 自動検出)
  --verbosity:0|1|2|3       Nimの冗長レベルを設定する（デフォルト: 1）
  --experimental:$1
                            実験中の機能を有効にする
  -v, --version             詳細なバージョン情報を表示する
